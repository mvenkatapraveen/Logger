spring.application.name=Logger

#When the debug mode is enabled, a selection of core loggers (embedded container, Hibernate, and Spring Boot) are configured to output more information. Enabling the debug mode does not configure your application to log all messages with DEBUG level.
#debug=true

#Set this property to OFF the Spring Banner in console
spring.main.banner-mode=off

#Structured Logging if not specified default logging
#To enable the Elastic Common Schema log format
#logging.structured.format.console=ecs
#To enable the Graylog Extended Log Format
#logging.structured.format.console=gelf
#logging.structured.format.console=logstash

#The charset to use for console logging.
#logging.charset.console=

#Comment the property to print default format in console
#Provide Empty Value & Un Comment the property to disable console logging
logging.pattern.console=

#If you have a spring.application.name property but donâ€™t want it logged you can set logging.include-application-name to false
logging.include-application-name=false

#Print to console with specific logging format
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %magenta([%thread]) ${PID} %highlight(%-5level) %-50logger{40} : %msg%n

#Log Levels INFO, WARN, ERROR, DEBUG, TRACE
#Commenting will print the default INFO log level
#logging.level.com.mvp=DEBUG


#If you want to write log files in addition to the console output, you need to set a logging.file.name or logging.file.path property (for example, in your application.properties). If both properties are set, logging.file.path is ignored and only logging.file.name is used.
logging.file.name = /Users/mvp/Workspace/Projects/STS/Logger/logs/emailnsms.log
#Commenting will print the log in default format

#Customize logging pattern
#logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] ${PID} %-5level %logger{40} : %msg%n

#Maximum file size before rolling to zip file
#Only below property is enough to roll into new zip file after file size exceeds the value mentioned
logging.logback.rollingpolicy.max-file-size=128MB

#The maximum amount of size log archives can take before being deleted.
#logging.logback.rollingpolicy.total-size-cap=1024MB

#Determines not the number of files but the number of days to keep the logs
#logging.logback.rollingpolicy.max-history=30

#Set the following property If log archive cleanup should occur when the application starts.
#logging.logback.rollingpolicy.clean-history-on-start: true


